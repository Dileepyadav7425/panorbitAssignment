{"ast":null,"code":"var _jsxFileName = \"/home/dileep/panorbits/Panorbit/src/contestApi/ContestProvider.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { createContext } from \"react\";\nimport { getProfile } from \"../Api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppContest = /*#__PURE__*/createContext();\nconst ContestProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // --------- profile show hide -------\n  const [showProfile, setShowProfile] = useState(false);\n\n  // --------------------\n  const [profileData, setProfileData] = useState([]);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  // ------------ Getting data from Api -------\n  const getAllData = () => {\n    setLoading(true);\n    setError(false);\n    getProfile().then(res => {\n      setData(res.data.users);\n      setLoading(false);\n      setError(false);\n    }).catch(e => {\n      setLoading(false);\n      setError(true);\n    });\n  };\n\n  // ------------ (fetching data with param id)---------\n  const getFilterData = id => {\n    getProfile().then(res => {\n      setProfileData(res.data.users.filter(el => el.id === Number(id)));\n    }).catch(e => {\n      console.log(e);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(AppContest.Provider, {\n    value: {\n      data,\n      profileData,\n      getFilterData,\n      loading,\n      error,\n      getAllData,\n      setShowProfile,\n      showProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ContestProvider, \"sdcklvhZAbpAYpa7gPknYP+kHMA=\");\n_c = ContestProvider;\nexport default ContestProvider;\nvar _c;\n$RefreshReg$(_c, \"ContestProvider\");","map":{"version":3,"names":["React","useState","createContext","getProfile","AppContest","ContestProvider","children","showProfile","setShowProfile","profileData","setProfileData","data","setData","loading","setLoading","error","setError","getAllData","then","res","users","catch","e","getFilterData","id","filter","el","Number","console","log"],"sources":["/home/dileep/panorbits/Panorbit/src/contestApi/ContestProvider.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { createContext } from \"react\";\nimport { getProfile } from \"../Api/api\";\n\nexport const AppContest = createContext();\nconst ContestProvider = ({ children }) => {\n  // --------- profile show hide -------\n  const [showProfile, setShowProfile] = useState(false);\n\n  // --------------------\n  const [profileData, setProfileData] = useState([]);\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  // ------------ Getting data from Api -------\n  const getAllData = () => {\n    setLoading(true);\n    setError(false);\n    getProfile()\n      .then((res) => {\n        setData(res.data.users);\n        setLoading(false);\n        setError(false);\n      })\n      .catch((e) => {\n        setLoading(false);\n        setError(true);\n      });\n  };\n\n  // ------------ (fetching data with param id)---------\n  const getFilterData = (id) => {\n    getProfile()\n      .then((res) => {\n        setProfileData(res.data.users.filter((el) => el.id === Number(id)));\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <AppContest.Provider\n      value={{\n        data,\n        profileData,\n        getFilterData,\n        loading,\n        error,\n        getAllData,\n        setShowProfile,\n        showProfile,\n      }}\n    >\n      {children}\n    </AppContest.Provider>\n  );\n};\n\nexport default ContestProvider;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,QAAQ,OAAO;AACrC,SAASC,UAAU,QAAQ,YAAY;AAAC;AAExC,OAAO,MAAMC,UAAU,gBAAGF,aAAa,EAAE;AACzC,MAAMG,eAAe,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACnC;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAEzC;EACA,MAAMgB,UAAU,GAAG,MAAM;IACvBH,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,KAAK,CAAC;IACfb,UAAU,EAAE,CACTe,IAAI,CAAEC,GAAG,IAAK;MACbP,OAAO,CAACO,GAAG,CAACR,IAAI,CAACS,KAAK,CAAC;MACvBN,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC,CACDK,KAAK,CAAEC,CAAC,IAAK;MACZR,UAAU,CAAC,KAAK,CAAC;MACjBE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;;EAED;EACA,MAAMO,aAAa,GAAIC,EAAE,IAAK;IAC5BrB,UAAU,EAAE,CACTe,IAAI,CAAEC,GAAG,IAAK;MACbT,cAAc,CAACS,GAAG,CAACR,IAAI,CAACS,KAAK,CAACK,MAAM,CAAEC,EAAE,IAAKA,EAAE,CAACF,EAAE,KAAKG,MAAM,CAACH,EAAE,CAAC,CAAC,CAAC;IACrE,CAAC,CAAC,CACDH,KAAK,CAAEC,CAAC,IAAK;MACZM,OAAO,CAACC,GAAG,CAACP,CAAC,CAAC;IAChB,CAAC,CAAC;EACN,CAAC;EAED,oBACE,QAAC,UAAU,CAAC,QAAQ;IAClB,KAAK,EAAE;MACLX,IAAI;MACJF,WAAW;MACXc,aAAa;MACbV,OAAO;MACPE,KAAK;MACLE,UAAU;MACVT,cAAc;MACdD;IACF,CAAE;IAAA,UAEDD;EAAQ;IAAA;IAAA;IAAA;EAAA,QACW;AAE1B,CAAC;AAAC,GArDID,eAAe;AAAA,KAAfA,eAAe;AAuDrB,eAAeA,eAAe;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}