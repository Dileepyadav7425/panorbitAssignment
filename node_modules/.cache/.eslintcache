[{"/home/dileep/panorbits/Panorbit/src/index.js":"1","/home/dileep/panorbits/Panorbit/src/App.js":"2","/home/dileep/panorbits/Panorbit/src/reportWebVitals.js":"3","/home/dileep/panorbits/Panorbit/src/contestApi/ContestProvider.jsx":"4","/home/dileep/panorbits/Panorbit/src/Routes/AllRoutes.jsx":"5","/home/dileep/panorbits/Panorbit/src/Api/api.js":"6","/home/dileep/panorbits/Panorbit/src/page/Gallery.jsx":"7","/home/dileep/panorbits/Panorbit/src/page/HomePage.jsx":"8","/home/dileep/panorbits/Panorbit/src/page/LandingPage.jsx":"9","/home/dileep/panorbits/Panorbit/src/page/Posts.jsx":"10","/home/dileep/panorbits/Panorbit/src/page/Todo.jsx":"11","/home/dileep/panorbits/Panorbit/src/components/LeftNav.jsx":"12","/home/dileep/panorbits/Panorbit/src/components/TopNav.jsx":"13","/home/dileep/panorbits/Panorbit/src/components/ProfileBottom.jsx":"14","/home/dileep/panorbits/Panorbit/src/components/GetProfiles.jsx":"15","/home/dileep/panorbits/Panorbit/src/page/ProfileDetails.jsx":"16","/home/dileep/panorbits/Panorbit/src/components/Chat.jsx":"17"},{"size":606,"mtime":1679729365620,"results":"18","hashOfConfig":"19"},{"size":289,"mtime":1679729365612,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1679729365620,"results":"21","hashOfConfig":"19"},{"size":1451,"mtime":1679729365616,"results":"22","hashOfConfig":"19"},{"size":629,"mtime":1679729365612,"results":"23","hashOfConfig":"19"},{"size":161,"mtime":1679729365612,"results":"24","hashOfConfig":"19"},{"size":959,"mtime":1679729365620,"results":"25","hashOfConfig":"19"},{"size":1616,"mtime":1679729365620,"results":"26","hashOfConfig":"19"},{"size":389,"mtime":1679729365620,"results":"27","hashOfConfig":"19"},{"size":953,"mtime":1679729365620,"results":"28","hashOfConfig":"19"},{"size":951,"mtime":1679729365620,"results":"29","hashOfConfig":"19"},{"size":1223,"mtime":1679729365616,"results":"30","hashOfConfig":"19"},{"size":913,"mtime":1679729365616,"results":"31","hashOfConfig":"19"},{"size":2890,"mtime":1679729365616,"results":"32","hashOfConfig":"19"},{"size":1147,"mtime":1679729365616,"results":"33","hashOfConfig":"19"},{"size":1201,"mtime":1679729365620,"results":"34","hashOfConfig":"19"},{"size":1578,"mtime":1679729365616,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oswlow",{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},"/home/dileep/panorbits/Panorbit/src/index.js",[],[],"/home/dileep/panorbits/Panorbit/src/App.js",[],[],"/home/dileep/panorbits/Panorbit/src/reportWebVitals.js",[],[],"/home/dileep/panorbits/Panorbit/src/contestApi/ContestProvider.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/Routes/AllRoutes.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/Api/api.js",[],[],"/home/dileep/panorbits/Panorbit/src/page/Gallery.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/page/HomePage.jsx",["92","93"],[],"import React, { useContext } from \"react\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport LeftNav from \"../components/LeftNav\";\nimport ProfileBottom from \"../components/ProfileBottom\";\nimport TopNav from \"../components/TopNav\";\nimport { AppContest } from \"../contestApi/ContestProvider\";\nimport style from \"../css/homepage.module.css\";\n\nconst HomePage = () => {\n  const { profileData, getFilterData, setShowProfile, showProfile } =\n    useContext(AppContest); // getting data from contest api\n  const { id } = useParams();\n  sessionStorage.setItem(\"id\", id);\n\n  // ------------ (fetching data with param id)---------\n  useEffect(() => {\n    let ID = sessionStorage.getItem(\"id\") || 1;\n    getFilterData(ID);\n  }, [id]);\n\n  return (\n    <div>\n      <div className={style.HomeMain}>\n        {/* ------------ (Left navbar)---------- */}\n        <LeftNav />\n        {/* ----------- (Right part)------------- */}\n        {profileData &&\n          profileData.map((el) => (\n            <div\n              style={{ width: \"80%\" }}\n              className={style.profile_top}\n              key={el.id}\n            >\n              {/* ---------- top nav------- */}\n              <div className={style.profile}>\n                <h2>Profile</h2>\n                <TopNav />\n              </div>\n\n              <hr />\n              {/* ------------- (bottom)------------- */}\n              <div onClick={() => setShowProfile(false)}>\n                <ProfileBottom {...el} />\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n","/home/dileep/panorbits/Panorbit/src/page/LandingPage.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/page/Posts.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/page/Todo.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/components/LeftNav.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/components/TopNav.jsx",["94"],[],"import React, { useContext, useEffect } from \"react\";\nimport { AppContest } from \"../contestApi/ContestProvider\";\nimport style from \"../css/homepage.module.css\";\nimport ProfileDetails from \"../page/ProfileDetails\";\n\nconst TopNav = () => {\n  const { profileData, setShowProfile, showProfile, getFilterData } =\n    useContext(AppContest); // getting data from contest api\n\n  // ------------ (fetching data with param id)---------\n  useEffect(() => {\n    const ID = sessionStorage.getItem(\"id\") || 1;\n    getFilterData(Number(ID));\n  }, []);\n\n  return (\n    <div>\n      <div\n        onClick={() => setShowProfile(!showProfile)}\n        className={style.profile}\n      >\n        <img src={profileData[0]?.profilepicture} alt=\"profile img\" />\n        <p>{profileData[0]?.name}</p>\n      </div>\n      {/* -------- (Profile details component)----- */}\n      <ProfileDetails />\n    </div>\n  );\n};\n\nexport default TopNav;\n","/home/dileep/panorbits/Panorbit/src/components/ProfileBottom.jsx",["95"],[],"import React from \"react\";\nimport style from \"../css/profilebottom.module.css\";\nimport Chat from \"./Chat\";\n\nconst ProfileBottom = (props) => {\n  const {\n    name,\n    profilepicture,\n    username,\n    email,\n    phone,\n    website,\n    company,\n    address,\n  } = props;\n\n  return (\n    <div className={style.mainDiv}>\n      {/* ---------- (left side)----------- */}\n      <div className={style.leftSide}>\n        <img src={profilepicture} alt=\"profile img\" />\n        {/* ------------ (name) ----------- */}\n        <p>{name}</p>\n        <div className={style.userName}>\n          <div>\n            <h2 style={{ marginTop: \"0px\" }}>Username :</h2>\n            <h2>e-mail :</h2>\n            <h2>Phone :</h2>\n            <h2>Website :</h2>\n          </div>\n          <div>\n            <h3 style={{ marginTop: \"0px\" }}>{username}</h3>\n            <h3>{email}</h3>\n            <h3>{phone}</h3>\n            <h3>{website}</h3>\n          </div>\n        </div>\n        <hr />\n        {/* --------------- (company)--------- */}\n        <h2>Company</h2>\n        <div className={style.company}>\n          <div>\n            <h2 style={{ marginTop: \"0px\" }}>Name :</h2>\n            <h2>catchphrase :</h2>\n            <h2>Bs :</h2>\n          </div>\n          <div>\n            <h3 style={{ paddingTop: \"3px\" }}>{company.name}</h3>\n            <h3>{company.catchPhrase}</h3>\n            <h3>{company.bs}</h3>\n          </div>\n        </div>\n      </div>\n      {/* -------- (vertical line) ------ */}\n      <p className={style.vl}></p>\n\n      {/* -------- (right side)---------- */}\n      <div className={style.rightSide}>\n        {/* -----------(address)------- */}\n        <h2>Address:</h2>\n        <div className={style.address}>\n          <div>\n            <h2 style={{ marginTop: \"0px\" }}>Street :</h2>\n            <h2>Suite :</h2>\n            <h2>City :</h2>\n            <h2>Zipcode :</h2>\n          </div>\n          <div>\n            <h3 style={{ marginTop: \"0px\" }}>{address.street}</h3>\n            <h3>{address.suite}</h3>\n            <h3>{address.city}</h3>\n            <h3>{address.zipcode}</h3>\n          </div>\n        </div>\n        {/* ---------- (map)---------- */}\n        <iframe\n          width=\"100%\"\n          height=\"350\"\n          className={style.Map}\n          src={`https://maps.google.com/maps?q=${address.street},t=&z=13&ie=UTF8&iwloc=&output=embed`}\n          frameBorder=\"0\"\n          scrolling=\"no\"\n          marginHeight=\"0\"\n          marginWidth=\"0\"\n        ></iframe>\n        {/* ---------- (geo)--------- */}\n        <div className={style.geo}>\n          <p>\n            Lat : <span>{address.geo.lat}</span>\n          </p>\n          <p>\n            Lng : <span>{address.geo.lng}</span>\n          </p>\n        </div>\n       {/* ------------- (chat) ---------- */}\n       <div>\n        <Chat />\n      </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileBottom;\n","/home/dileep/panorbits/Panorbit/src/components/GetProfiles.jsx",["96","97"],[],"import React, { useContext, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { AppContest } from \"../contestApi/ContestProvider\";\nimport style from \"../css/getprofile.module.css\";\n\nconst GetProfiles = () => {\n  const { data, loading, error, getAllData } = useContext(AppContest); // getting data from contest api\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  // -------- loading ---------\n  if (loading) {\n    return <h3 style={{ color: \"teal\" }}>Loading....</h3>;\n  }\n\n  // --------- error ---------\n  if (error) {\n    return <h3 style={{ color: \"red\" }}>server error....</h3>;\n  }\n\n  return (\n    <div className={style.card_bottom}>\n      {/* --------- Data maping ------ */}\n      {data &&\n        data.map((el) => (\n          <div key={el.id}>\n            <NavLink\n              to={`/homepage/${el.id}`}\n            >\n              <div className={style.maping_div}>\n                <img src={el.profilepicture} alt=\"profile image\" />\n                <p>{el.name}</p>\n              </div>\n            </NavLink>\n            <hr />\n          </div>\n        ))}\n    </div>\n  );\n};\n\nexport default GetProfiles;\n","/home/dileep/panorbits/Panorbit/src/page/ProfileDetails.jsx",[],[],"/home/dileep/panorbits/Panorbit/src/components/Chat.jsx",["98","99"],[],"import React, { useEffect, useState } from \"react\";\nimport style from \"../css/chat.module.css\";\nimport { BsChatRight } from \"react-icons/bs\";\nimport { FiChevronDown, FiChevronUp } from \"react-icons/fi\";\nimport { useContext } from \"react\";\nimport { AppContest } from \"../contestApi/ContestProvider\";\n\nconst Chat = () => {\n  const { data, loading, error, getAllData } = useContext(AppContest); // getting data from contest api\n  const [hide, setHide] = useState(false);\n\n  useEffect(() => {\n    getAllData();\n  }, []);\n\n  // -------- loading ---------\n  if (loading) {\n    return <h3 style={{ color: \"teal\" }}>Loading....</h3>;\n  }\n\n  // --------- error ---------\n  if (error) {\n    return <h3 style={{ color: \"red\" }}>server error....</h3>;\n  }\n  return (\n    <div\n      className={style.mainDiv}\n      style={{ marginTop: hide ? \"-270px\" : \"20px\" }}\n    >\n      <div onClick={() => setHide(!hide)} className={style.chat}>\n        <div>\n          <BsChatRight />\n          <p>Chat</p>\n        </div>\n        {hide ? <FiChevronDown /> : <FiChevronUp />}\n      </div>\n      {hide ? (\n        <div className={style.profiles}>\n          {/* --------- Data maping ------ */}\n          {data &&\n            data.map((el) => (\n              <div key={el.id}>\n                <div className={style.maping_div}>\n                  <img src={el.profilepicture} alt=\"profile image\" />\n                  <p>{el.name}</p>\n                </div>\n                <hr />\n              </div>\n            ))}\n        </div>\n      ) : (\n        \"\"\n      )}\n    </div>\n  );\n};\n\nexport default Chat;\n",{"ruleId":"100","severity":1,"message":"101","line":11,"column":55,"nodeType":"102","messageId":"103","endLine":11,"endColumn":66},{"ruleId":"104","severity":1,"message":"105","line":20,"column":6,"nodeType":"106","endLine":20,"endColumn":10,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"105","line":14,"column":6,"nodeType":"106","endLine":14,"endColumn":8,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":76,"column":9,"nodeType":"111","endLine":85,"endColumn":10},{"ruleId":"104","severity":1,"message":"112","line":11,"column":6,"nodeType":"106","endLine":11,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":33,"column":17,"nodeType":"111","endLine":33,"endColumn":68},{"ruleId":"104","severity":1,"message":"112","line":14,"column":6,"nodeType":"106","endLine":14,"endColumn":8,"suggestions":"116"},{"ruleId":"114","severity":1,"message":"115","line":44,"column":19,"nodeType":"111","endLine":44,"endColumn":70},"no-unused-vars","'showProfile' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getFilterData'. Either include it or remove the dependency array.","ArrayExpression",["117"],["118"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.",["119"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["120"],{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"125","fix":"127"},"Update the dependencies array to be: [getFilterData, id]",{"range":"128","text":"129"},"Update the dependencies array to be: [getFilterData]",{"range":"130","text":"131"},"Update the dependencies array to be: [getAllData]",{"range":"132","text":"133"},{"range":"134","text":"133"},[754,758],"[getFilterData, id]",[534,536],"[getFilterData]",[385,387],"[getAllData]",[512,514]]